{"version":3,"sources":["Bingo.js","index.js"],"names":["Bingo","props","state","position","winner","console","log","this","setState","prevState","is_winner","p","r","score","c","bingo","Streamlit","setComponentValue","args","setFrameHeight","center_piece","undefined","options","incr","i","run","height","map","r_val","key","c_val","src","width","alt","type","className","id","onChange","e","target","checked","check_bingo","htmlFor","startsWith","StreamlitComponentBase","withStreamlitConnection","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08029f29.chunk.js","sourcesContent":["import {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode, useEffect, useState } from \"react\"\nimport Confetti from 'react-confetti'\n\nclass Bingo extends StreamlitComponentBase {\n    constructor(props) {\n        super(props);\n        this.state = {\n            position: [\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0]\n            ],\n            winner: false\n        };\n    }\n\n    bingo() {\n        console.log(\"BINGO!\")\n        // Streamlit.setComponentValue(true)\n        // this.setState(prevState => ({ ...prevState, prevState.winner: true}))\n        this.setState(prevState => ({\n            winner: true\n        }));\n    }\n\n    check_bingo() {\n        let is_winner = false\n\n        let p = this.state.position\n        for (let r = 0; r < 5; r++) {\n            let score = 0\n            for (let c = 0; c < 5; c++) {\n                score += p[r][c]\n            }\n            if (score === 5) {\n                this.bingo()\n                is_winner = true\n            }\n        }\n        for (let c = 0; c < 5; c++) {\n            let score = 0\n            for (let r = 0; r < 5; r++) {\n                score += p[r][c]\n            }\n            if (score === 5) {\n                this.bingo()\n                is_winner = true\n            }\n        }\n\n        if ((p[0][0] + p[1][1] + p[2][2] + p[3][3] + p[4][4]) === 5) {\n            this.bingo()\n            is_winner = true\n        }\n\n        if ((p[4][0] + p[3][1] + p[2][2] + p[1][3] + p[0][4]) === 5) {\n            this.bingo()\n            is_winner = true\n        }\n\n        this.setState(prevState => ({\n            winner: is_winner\n        }));\n    }\n\n    componentDidMount() {\n        Streamlit.setComponentValue(this.props.args[\"value\"])\n        Streamlit.setFrameHeight()\n    }\n\n\n    render() {\n        const center_piece = this.props.args[\"center_piece\"] === undefined ? 'https://www.snowflake.com/wp-content/themes/snowflake/img/favicons/apple-touch-icon.png' : this.props.args[\"center_piece\"]\n        const options = this.props.args[\"bingo_options\"] === undefined ? ['B', 'I', 'N', 'G', 'O'] : (this.props.args[\"bingo_options\"])\n\n        var incr = 0\n        var i = -1\n\n        return (<>\n            <Confetti\n                run={this.state.winner}\n                height={700}\n            />\n            <table>\n                <thead>\n                    <tr>\n                        <td>B</td>\n                        <td>I</td>\n                        <td>N</td>\n                        <td>G</td>\n                        <td>O</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {[0, 0, 0, 0, 0].map((r_val, r) => {\n                        return (\n                            <tr key={`r${r}`}>\n                                {[0, 0, 0, 0, 0].map((c_val, c) => {\n                                    i++\n                                    if (options[i] === undefined) {\n                                        i = -1\n                                    }\n                                    incr++\n                                    return (\n                                        <td key={`r${r}c${c}`}>\n                                            {(r === 2 & c === 2) ? <img src={center_piece} width=\"90%\" alt=\"Free Space\" />\n                                                :\n                                                <>\n                                                    <input\n                                                        type=\"checkbox\"\n                                                        className=\"btnControl\"\n                                                        id={`btnControl${incr}`}\n                                                        onChange={(e) => {\n                                                            this.state.position[r][c] = e.target.checked ? 1 : 0\n                                                            this.setState(prevState => this.state.position)\n                                                            this.check_bingo()\n                                                        }}\n                                                    />\n                                                    <label className=\"btn\" htmlFor={`btnControl${incr}`}>\n                                                        <img src={center_piece} width=\"90%\" alt=\"Bingo Marker\" />\n                                                        <div>\n                                                            {(options[i].startsWith('http://') | options[i].startsWith('https://')) ? <img src={options[i]} width=\"50%\" alt=\"Bingo Option\" /> : options[i]}\n                                                        </div>\n                                                    </label>\n                                                </>\n                                            }\n                                        </td>\n                                    )\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n\n        </>)\n    }\n}\n\nexport default withStreamlitConnection(Bingo)","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Bingo from \"./Bingo\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <Bingo />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}